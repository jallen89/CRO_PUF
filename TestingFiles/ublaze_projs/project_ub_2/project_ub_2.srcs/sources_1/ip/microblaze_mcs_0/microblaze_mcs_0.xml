<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:xilinx="http://www.xilinx.com" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <spirit:vendor>xilinx.com</spirit:vendor>
  <spirit:library>customized_ip</spirit:library>
  <spirit:name>microblaze_mcs_0</spirit:name>
  <spirit:version>1.0</spirit:version>
  <spirit:busInterfaces>
    <spirit:busInterface>
      <spirit:name>CLK.CLK</spirit:name>
      <spirit:displayName>Clk</spirit:displayName>
      <spirit:description>Clock Input</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Clk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.CLK.CLK.ASSOCIATED_BUSIF">SLMB</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.CLK.CLK.ASSOCIATED_RESET">Reset</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BOARD.ASSOCIATED_PARAM</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.CLK.CLK.BOARD.ASSOCIATED_PARAM">CLK_BOARD_INTERFACE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>required</xilinx:presence>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>RST.Rst</spirit:name>
      <spirit:displayName>Reset</spirit:displayName>
      <spirit:description>Reset Input</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Reset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.RST.RST.POLARITY">ACTIVE_HIGH</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BOARD.ASSOCIATED_PARAM</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.RST.RST.BOARD.ASSOCIATED_PARAM">RESET_BOARD_INTERFACE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>required</xilinx:presence>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>IO_BUS</spirit:name>
      <spirit:displayName>IO_BUS</spirit:displayName>
      <spirit:description>MicroBlaze MCS IO Bus Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="mcsio_bus" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="mcsio_bus_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ADDR_STROBE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Addr_Strobe</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ADDRESS</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Address</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BYTE_ENABLE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Byte_Enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>READ_DATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Read_Data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>READ_STROBE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Read_Strobe</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>READY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Ready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WRITE_DATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Write_Data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WRITE_STROBE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Write_Strobe</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>INTERRUPT.UART_Interrupt</spirit:name>
      <spirit:displayName>UART_Interrupt</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>UART_Interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.UART_INTERRUPT.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUGGESTED_PRIORITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.UART_INTERRUPT.SUGGESTED_PRIORITY">HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_RX_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_TX_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_ERROR_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>INTERRUPT.FIT1_Interrupt</spirit:name>
      <spirit:displayName>FIT1_Interrupt</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>FIT1_Interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.FIT1_INTERRUPT.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUGGESTED_PRIORITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.FIT1_INTERRUPT.SUGGESTED_PRIORITY">HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT1&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT1_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>INTERRUPT.FIT2_Interrupt</spirit:name>
      <spirit:displayName>FIT2_Interrupt</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>FIT2_Interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.FIT2_INTERRUPT.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUGGESTED_PRIORITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.FIT2_INTERRUPT.SUGGESTED_PRIORITY">HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT2&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT2_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>INTERRUPT.FIT3_Interrupt</spirit:name>
      <spirit:displayName>FIT3_Interrupt</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>FIT3_Interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.FIT3_INTERRUPT.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUGGESTED_PRIORITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.FIT3_INTERRUPT.SUGGESTED_PRIORITY">HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT3&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT3_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>INTERRUPT.FIT4_Interrupt</spirit:name>
      <spirit:displayName>FIT4_Interrupt</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>FIT4_Interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.FIT4_INTERRUPT.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUGGESTED_PRIORITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.FIT4_INTERRUPT.SUGGESTED_PRIORITY">HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT4&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT4_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>INTERRUPT.PIT1_Interrupt</spirit:name>
      <spirit:displayName>PIT1_Interrupt</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>PIT1_Interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.PIT1_INTERRUPT.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUGGESTED_PRIORITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.PIT1_INTERRUPT.SUGGESTED_PRIORITY">HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT1&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT1_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>INTERRUPT.PIT2_Interrupt</spirit:name>
      <spirit:displayName>PIT2_Interrupt</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>PIT2_Interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.PIT2_INTERRUPT.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUGGESTED_PRIORITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.PIT2_INTERRUPT.SUGGESTED_PRIORITY">HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT2&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT2_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>INTERRUPT.PIT3_Interrupt</spirit:name>
      <spirit:displayName>PIT3_Interrupt</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>PIT3_Interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.PIT3_INTERRUPT.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUGGESTED_PRIORITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.PIT3_INTERRUPT.SUGGESTED_PRIORITY">HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT3&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT3_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>INTERRUPT.PIT4_Interrupt</spirit:name>
      <spirit:displayName>PIT4_Interrupt</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>PIT4_Interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.PIT4_INTERRUPT.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUGGESTED_PRIORITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.PIT4_INTERRUPT.SUGGESTED_PRIORITY">HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT4&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT4_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>INTERRUPT.GPI1_Interrupt</spirit:name>
      <spirit:displayName>GPI1_Interrupt</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>GPI1_Interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.GPI1_INTERRUPT.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUGGESTED_PRIORITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.GPI1_INTERRUPT.SUGGESTED_PRIORITY">HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI1&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI1_INTERRUPT&apos;)) > 0)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>INTERRUPT.GPI2_Interrupt</spirit:name>
      <spirit:displayName>GPI2_Interrupt</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>GPI2_Interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.GPI2_INTERRUPT.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUGGESTED_PRIORITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.GPI2_INTERRUPT.SUGGESTED_PRIORITY">HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI2&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI2_INTERRUPT&apos;)) > 0)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>INTERRUPT.GPI3_Interrupt</spirit:name>
      <spirit:displayName>GPI3_Interrupt</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>GPI3_Interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.GPI3_INTERRUPT.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUGGESTED_PRIORITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.GPI3_INTERRUPT.SUGGESTED_PRIORITY">HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI3&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI3_INTERRUPT&apos;)) > 0)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>INTERRUPT.GPI4_Interrupt</spirit:name>
      <spirit:displayName>GPI4_Interrupt</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>GPI4_Interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>SENSITIVITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.GPI4_INTERRUPT.SENSITIVITY">EDGE_RISING</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUGGESTED_PRIORITY</spirit:name>
          <spirit:value spirit:format="string" spirit:id="BUSIFPARAM_VALUE.INTERRUPT.GPI4_INTERRUPT.SUGGESTED_PRIORITY">HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI4&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI4_INTERRUPT&apos;)) > 0)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>INTC_Interrupt</spirit:name>
      <spirit:displayName>INTC_Interrupt</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="interrupt_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTERRUPT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>INTC_Interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_INTC_USE_EXT_INTR&apos;)) = 1">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>TRACE</spirit:name>
      <spirit:displayName>TRACE</spirit:displayName>
      <spirit:description>MicroBlaze MCS Trace Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="mbtrace" spirit:version="2.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="mbtrace_rtl" spirit:version="2.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DATA_ACCESS</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Data_Access</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DATA_ADDRESS</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Data_Address</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DATA_BYTE_ENABLE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Data_Byte_Enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DATA_READ</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Data_Read</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DATA_WRITE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Data_Write</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DATA_WRITE_VALUE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Data_Write_Value</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DELAY_SLOT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Delay_Slot</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INSTRUCTION</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Instruction</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>JUMP_TAKEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Jump_Taken</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>MB_HALTED</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_MB_Halted</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>MSR_REG</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_MSR_Reg</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>NEW_REG_VALUE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_New_Reg_Value</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PC</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_PC</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>REG_ADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Reg_Addr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>REG_WRITE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Reg_Write</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>VALID_INSTR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Valid_Instr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>UART</spirit:name>
      <spirit:displayName>UART</spirit:displayName>
      <spirit:description>UART TX/RX</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="uart" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="uart_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RxD</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>UART_Rx</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TxD</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>UART_Tx</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>BOARD.ASSOCIATED_PARAM</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.UART.BOARD.ASSOCIATED_PARAM">UART_BOARD_INTERFACE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>required</xilinx:presence>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_UART_RX&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_UART_TX&apos;)) = 1)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>GPIO1</spirit:name>
      <spirit:displayName>GPIO1</spirit:displayName>
      <spirit:description>General Purpose IO</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="gpio" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="gpio_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRI_I</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>GPI1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRI_O</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>GPO1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>C_USE_GPO1</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO1.C_USE_GPO1" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO1&apos;))">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPO1_SIZE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO1.C_GPO1_SIZE" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO1_SIZE&apos;))">3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPO1_INIT</spirit:name>
          <spirit:value spirit:format="string" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO1.C_GPO1_INIT" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO1_INIT&apos;))">0x00000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_USE_GPI1</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO1.C_USE_GPI1" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI1&apos;))">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPI1_SIZE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO1.C_GPI1_SIZE" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI1_SIZE&apos;))">3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPI1_INTERRUPT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO1.C_GPI1_INTERRUPT" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI1_INTERRUPT&apos;))">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BOARD.ASSOCIATED_PARAM</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.GPIO1.BOARD.ASSOCIATED_PARAM">GPIO1_BOARD_INTERFACE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>required</xilinx:presence>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO1&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI1&apos;)) = 1)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>GPIO2</spirit:name>
      <spirit:displayName>GPIO2</spirit:displayName>
      <spirit:description>General Purpose IO</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="gpio" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="gpio_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRI_I</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>GPI2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRI_O</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>GPO2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>C_USE_GPO2</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO2.C_USE_GPO2" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO2&apos;))">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPO2_SIZE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO2.C_GPO2_SIZE" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO2_SIZE&apos;))">32</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPO2_INIT</spirit:name>
          <spirit:value spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO2.C_GPO2_INIT" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO2_INIT&apos;))">0x00000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_USE_GPI2</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO2.C_USE_GPI2" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI2&apos;))">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPI2_SIZE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO2.C_GPI2_SIZE" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI2_SIZE&apos;))">32</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPI2_INTERRUPT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO2.C_GPI2_INTERRUPT" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI2_INTERRUPT&apos;))">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BOARD.ASSOCIATED_PARAM</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.GPIO2.BOARD.ASSOCIATED_PARAM">GPIO2_BOARD_INTERFACE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>required</xilinx:presence>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO2&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI2&apos;)) = 1)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>GPIO3</spirit:name>
      <spirit:displayName>GPIO3</spirit:displayName>
      <spirit:description>General Purpose IO</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="gpio" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="gpio_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRI_I</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>GPI3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRI_O</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>GPO3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>C_USE_GPO3</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO3.C_USE_GPO3" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO3&apos;))">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPO3_SIZE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO3.C_GPO3_SIZE" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO3_SIZE&apos;))">32</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPO3_INIT</spirit:name>
          <spirit:value spirit:format="string" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO3.C_GPO3_INIT" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO3_INIT&apos;))">0x00000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_USE_GPI3</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO3.C_USE_GPI3" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI3&apos;))">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPI3_SIZE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO3.C_GPI3_SIZE" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI3_SIZE&apos;))">32</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPI3_INTERRUPT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO3.C_GPI3_INTERRUPT" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI3_INTERRUPT&apos;))">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BOARD.ASSOCIATED_PARAM</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.GPIO3.BOARD.ASSOCIATED_PARAM">GPIO3_BOARD_INTERFACE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>required</xilinx:presence>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO3&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI3&apos;)) = 1)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>GPIO4</spirit:name>
      <spirit:displayName>GPIO4</spirit:displayName>
      <spirit:description>General Purpose IO</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="gpio" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="gpio_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRI_I</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>GPI4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRI_O</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>GPO4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>C_USE_GPO4</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO4.C_USE_GPO4" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO4&apos;))">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPO4_SIZE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO4.C_GPO4_SIZE" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO4_SIZE&apos;))">32</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPO4_INIT</spirit:name>
          <spirit:value spirit:format="string" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO4.C_GPO4_INIT" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO4_INIT&apos;))">0x00000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_USE_GPI4</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO4.C_USE_GPI4" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI4&apos;))">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPI4_SIZE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO4.C_GPI4_SIZE" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI4_SIZE&apos;))">32</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>C_GPI4_INTERRUPT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.GPIO4.C_GPI4_INTERRUPT" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI4_INTERRUPT&apos;))">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>optional</xilinx:presence>
                <xilinx:isEnabled>false</xilinx:isEnabled>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BOARD.ASSOCIATED_PARAM</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.GPIO4.BOARD.ASSOCIATED_PARAM">GPIO4_BOARD_INTERFACE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:enablement>
                <xilinx:presence>required</xilinx:presence>
              </xilinx:enablement>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO4&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI4&apos;)) = 1)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
  </spirit:busInterfaces>
  <spirit:model>
    <spirit:views>
      <spirit:view>
        <spirit:name>xilinx_vhdlinstantiationtemplate</spirit:name>
        <spirit:displayName>VHDL Instantiation Template</spirit:displayName>
        <spirit:envIdentifier>vhdlSource:vivado.xilinx.com:synthesis.template</spirit:envIdentifier>
        <spirit:language>vhdl</spirit:language>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_vhdlinstantiationtemplate_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>47ffb8bf</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>4</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sun Apr 10 18:29:18 UTC 2016</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>StaleAtRelink</spirit:name>
            <spirit:value>false</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_versioninformation</spirit:name>
        <spirit:displayName>Version Information</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:docs.versioninfo</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_versioninformation_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>47ffb8bf</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>4</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sun Apr 10 18:29:20 UTC 2016</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>StaleAtRelink</spirit:name>
            <spirit:value>false</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_vhdlsynthesis</spirit:name>
        <spirit:displayName>VHDL Synthesis</spirit:displayName>
        <spirit:envIdentifier>vhdlSource:vivado.xilinx.com:synthesis</spirit:envIdentifier>
        <spirit:language>vhdl</spirit:language>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_vhdlsynthesis_xilinx_com_ip_microblaze_9_3__ref_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_vhdlsynthesis_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>7f001de6</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>4</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sun Apr 10 20:42:02 UTC 2016</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>StaleAtRelink</spirit:name>
            <spirit:value>false</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_vhdlsynthesiswrapper</spirit:name>
        <spirit:displayName>VHDL Synthesis Wrapper</spirit:displayName>
        <spirit:envIdentifier>vhdlSource:vivado.xilinx.com:synthesis.wrapper</spirit:envIdentifier>
        <spirit:language>vhdl</spirit:language>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_vhdlsynthesiswrapper_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>7f001de6</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>4</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sun Apr 10 20:42:02 UTC 2016</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>StaleAtRelink</spirit:name>
            <spirit:value>false</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_implementation</spirit:name>
        <spirit:displayName>Implementation</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:implementation</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_implementation_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>7f001de6</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>4</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sun Apr 10 20:42:02 UTC 2016</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>StaleAtRelink</spirit:name>
            <spirit:value>false</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_vhdlbehavioralsimulation</spirit:name>
        <spirit:displayName>VHDL Simulation</spirit:displayName>
        <spirit:envIdentifier>vhdlSource:vivado.xilinx.com:simulation</spirit:envIdentifier>
        <spirit:language>vhdl</spirit:language>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_vhdlbehavioralsimulation_xilinx_com_ip_microblaze_9_3__ref_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_vhdlbehavioralsimulation_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>773f2918</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>4</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sun Apr 10 21:23:13 UTC 2016</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>StaleAtRelink</spirit:name>
            <spirit:value>false</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_vhdlsimulationwrapper</spirit:name>
        <spirit:displayName>VHDL Simulation Wrapper</spirit:displayName>
        <spirit:envIdentifier>vhdlSource:vivado.xilinx.com:simulation.wrapper</spirit:envIdentifier>
        <spirit:language>vhdl</spirit:language>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_vhdlsimulationwrapper_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>773f2918</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>4</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sun Apr 10 21:23:13 UTC 2016</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>StaleAtRelink</spirit:name>
            <spirit:value>false</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_externalfiles</spirit:name>
        <spirit:displayName>External Files</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:external.files</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_externalfiles_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>7f001de6</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>4</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Thu Jan 01 00:00:00 UTC 1970</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>StaleAtRelink</spirit:name>
            <spirit:value>false</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
    </spirit:views>
    <spirit:ports>
      <spirit:port>
        <spirit:name>Clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled>true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Reset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled>true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Addr_Strobe</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Read_Strobe</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Write_Strobe</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Address</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>31</spirit:left>
            <spirit:right>0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Byte_Enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>3</spirit:left>
            <spirit:right>0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Write_Data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>31</spirit:left>
            <spirit:right>0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Read_Data</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left>31</spirit:left>
            <spirit:right>0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Ready</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>UART_Rx</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_UART_RX&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>UART_Tx</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_UART_TX&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>UART_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_RX_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_TX_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_ERROR_INTERRUPT&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT1_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT1&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT1_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT1_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT1&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT2_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT2&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT2_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT2_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT2&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT3_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT3&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT3_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT3_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT3&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT4_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT4&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT4_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT4_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT4&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT1_Enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT1&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT1_PRESCALER&apos;)) = 9)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT1_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT1&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT1_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT1_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT1&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT2_Enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT2&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT2_PRESCALER&apos;)) = 9)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT2_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT2&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT2_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT2_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT2&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT3_Enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT3&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT3_PRESCALER&apos;)) = 9)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT3_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT3&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT3_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT3_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT3&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT4_Enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT4&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT4_PRESCALER&apos;)) = 9)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT4_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT4&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT4_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT4_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT4&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPO1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO1_SIZE&apos;)) - 1)">2</spirit:left>
            <spirit:right>0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO1&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPO2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO2_SIZE&apos;)) - 1)">31</spirit:left>
            <spirit:right>0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO2&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPO3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO3_SIZE&apos;)) - 1)">31</spirit:left>
            <spirit:right>0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO3&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPO4</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO4_SIZE&apos;)) - 1)">31</spirit:left>
            <spirit:right>0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO4&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI1_SIZE&apos;)) - 1)">2</spirit:left>
            <spirit:right>0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI1&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI1_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI1&apos;)) > 0">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI2_SIZE&apos;)) - 1)">31</spirit:left>
            <spirit:right>0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI2&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI2_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI2&apos;)) > 0">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI3_SIZE&apos;)) - 1)">31</spirit:left>
            <spirit:right>0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI3&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI3_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI3&apos;)) > 0">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI4_SIZE&apos;)) - 1)">31</spirit:left>
            <spirit:right>0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI4&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI4_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI4&apos;)) > 0">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>INTC_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_INTC_INTR_SIZE&apos;)) - 1)">0</spirit:left>
            <spirit:right>0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_INTC_USE_EXT_INTR&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>INTC_IRQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_RX_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_TX_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_ERROR_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT1_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT2_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT3_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT4_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT1_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT2_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT3_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT4_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI1_INTERRUPT&apos;)) > 0) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI2_INTERRUPT&apos;)) > 0) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI3_INTERRUPT&apos;)) > 0) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI4_INTERRUPT&apos;)) > 0) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_INTC_USE_EXT_INTR&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Instruction</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Valid_Instr</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_PC</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Reg_Write</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Reg_Addr</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>4</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_MSR_Reg</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>14</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_New_Reg_Value</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Jump_Taken</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Delay_Slot</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Data_Address</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Data_Access</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Data_Read</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Data_Write</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Data_Write_Value</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Data_Byte_Enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>3</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_MB_Halted</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_vhdlsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_vhdlbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
    </spirit:ports>
    <spirit:modelParameters>
      <spirit:modelParameter xsi:type="spirit:nameValueTypeType" spirit:dataType="string">
        <spirit:name>C_FAMILY</spirit:name>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FAMILY">artix7</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>C_MICROBLAZE_INSTANCE</spirit:name>
        <spirit:displayName>C_MICROBLAZE_INSTANCE</spirit:displayName>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_MICROBLAZE_INSTANCE">microblaze_mcs_0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_AVOID_PRIMITIVES</spirit:name>
        <spirit:displayName>C_AVOID_PRIMITIVES</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_AVOID_PRIMITIVES">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>C_PATH</spirit:name>
        <spirit:displayName>C_PATH</spirit:displayName>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PATH">mcs_0/U0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FREQ</spirit:name>
        <spirit:displayName>C_FREQ</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FREQ">100000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_MEMSIZE</spirit:name>
        <spirit:displayName>C_MEMSIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_MEMSIZE" spirit:choiceRef="choices_58">8192</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_DEBUG_ENABLED</spirit:name>
        <spirit:displayName>C_DEBUG_ENABLED</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_DEBUG_ENABLED" spirit:choiceRef="choices_59">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_JTAG_CHAIN</spirit:name>
        <spirit:displayName>Debug JTAG User-defined Register</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_JTAG_CHAIN" spirit:choiceRef="choices_60">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_TRACE</spirit:name>
        <spirit:displayName>C_TRACE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TRACE" spirit:choiceRef="choices_61">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_IO_BUS</spirit:name>
        <spirit:displayName>C_USE_IO_BUS</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_IO_BUS" spirit:choiceRef="choices_62">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_UART_RX</spirit:name>
        <spirit:displayName>C_USE_UART_RX</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_UART_RX" spirit:choiceRef="choices_63">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_UART_TX</spirit:name>
        <spirit:displayName>C_USE_UART_TX</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_UART_TX" spirit:choiceRef="choices_64">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_BAUDRATE</spirit:name>
        <spirit:displayName>C_UART_BAUDRATE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_BAUDRATE" spirit:choiceRef="choices_65">115200</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_DATA_BITS</spirit:name>
        <spirit:displayName>C_UART_DATA_BITS</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_DATA_BITS" spirit:minimum="5" spirit:maximum="8">8</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_USE_PARITY</spirit:name>
        <spirit:displayName>C_UART_USE_PARITY</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_USE_PARITY" spirit:choiceRef="choices_66">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_ODD_PARITY</spirit:name>
        <spirit:displayName>C_UART_ODD_PARITY</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_ODD_PARITY" spirit:choiceRef="choices_67">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_RX_INTERRUPT</spirit:name>
        <spirit:displayName>C_UART_RX_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_RX_INTERRUPT" spirit:choiceRef="choices_68">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_TX_INTERRUPT</spirit:name>
        <spirit:displayName>C_UART_TX_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_TX_INTERRUPT" spirit:choiceRef="choices_69">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_ERROR_INTERRUPT</spirit:name>
        <spirit:displayName>C_UART_ERROR_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_ERROR_INTERRUPT" spirit:choiceRef="choices_70">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_PROG_BAUDRATE</spirit:name>
        <spirit:displayName>C_UART_PROG_BAUDRATE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_PROG_BAUDRATE" spirit:choiceRef="choices_71">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_FIT1</spirit:name>
        <spirit:displayName>C_USE_FIT1</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_FIT1" spirit:choiceRef="choices_72">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT1_No_CLOCKS</spirit:name>
        <spirit:displayName>C_FIT1_No_CLOCKS</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT1_No_CLOCKS" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT1_INTERRUPT</spirit:name>
        <spirit:displayName>C_FIT1_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT1_INTERRUPT" spirit:choiceRef="choices_73">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_FIT2</spirit:name>
        <spirit:displayName>C_USE_FIT2</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_FIT2" spirit:choiceRef="choices_74">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT2_No_CLOCKS</spirit:name>
        <spirit:displayName>C_FIT2_No_CLOCKS</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT2_No_CLOCKS" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT2_INTERRUPT</spirit:name>
        <spirit:displayName>C_FIT2_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT2_INTERRUPT" spirit:choiceRef="choices_75">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_FIT3</spirit:name>
        <spirit:displayName>C_USE_FIT3</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_FIT3" spirit:choiceRef="choices_76">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT3_No_CLOCKS</spirit:name>
        <spirit:displayName>C_FIT3_No_CLOCKS</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT3_No_CLOCKS" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT3_INTERRUPT</spirit:name>
        <spirit:displayName>C_FIT3_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT3_INTERRUPT" spirit:choiceRef="choices_77">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_FIT4</spirit:name>
        <spirit:displayName>C_USE_FIT4</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_FIT4" spirit:choiceRef="choices_78">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT4_No_CLOCKS</spirit:name>
        <spirit:displayName>C_FIT4_No_CLOCKS</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT4_No_CLOCKS" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT4_INTERRUPT</spirit:name>
        <spirit:displayName>C_FIT4_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT4_INTERRUPT" spirit:choiceRef="choices_79">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_PIT1</spirit:name>
        <spirit:displayName>C_USE_PIT1</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_PIT1" spirit:choiceRef="choices_80">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT1_SIZE</spirit:name>
        <spirit:displayName>C_PIT1_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT1_SIZE" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT1_READABLE</spirit:name>
        <spirit:displayName>C_PIT1_READABLE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT1_READABLE" spirit:choiceRef="choices_81">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT1_PRESCALER</spirit:name>
        <spirit:displayName>C_PIT1_PRESCALER</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT1_PRESCALER" spirit:choiceRef="choices_82">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT1_INTERRUPT</spirit:name>
        <spirit:displayName>C_PIT1_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT1_INTERRUPT" spirit:choiceRef="choices_83">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_PIT2</spirit:name>
        <spirit:displayName>C_USE_PIT2</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_PIT2" spirit:choiceRef="choices_84">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT2_SIZE</spirit:name>
        <spirit:displayName>C_PIT2_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT2_SIZE" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT2_READABLE</spirit:name>
        <spirit:displayName>C_PIT2_READABLE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT2_READABLE" spirit:choiceRef="choices_85">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT2_PRESCALER</spirit:name>
        <spirit:displayName>C_PIT2_PRESCALER</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT2_PRESCALER" spirit:choiceRef="choices_86">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT2_INTERRUPT</spirit:name>
        <spirit:displayName>C_PIT2_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT2_INTERRUPT" spirit:choiceRef="choices_87">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_PIT3</spirit:name>
        <spirit:displayName>C_USE_PIT3</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_PIT3" spirit:choiceRef="choices_88">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT3_SIZE</spirit:name>
        <spirit:displayName>C_PIT3_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT3_SIZE" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT3_READABLE</spirit:name>
        <spirit:displayName>C_PIT3_READABLE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT3_READABLE" spirit:choiceRef="choices_89">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT3_PRESCALER</spirit:name>
        <spirit:displayName>C_PIT3_PRESCALER</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT3_PRESCALER" spirit:choiceRef="choices_90">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT3_INTERRUPT</spirit:name>
        <spirit:displayName>C_PIT3_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT3_INTERRUPT" spirit:choiceRef="choices_91">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_PIT4</spirit:name>
        <spirit:displayName>C_USE_PIT4</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_PIT4" spirit:choiceRef="choices_92">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT4_SIZE</spirit:name>
        <spirit:displayName>C_PIT4_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT4_SIZE" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT4_READABLE</spirit:name>
        <spirit:displayName>C_PIT4_READABLE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT4_READABLE" spirit:choiceRef="choices_93">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT4_PRESCALER</spirit:name>
        <spirit:displayName>C_PIT4_PRESCALER</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT4_PRESCALER" spirit:choiceRef="choices_94">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT4_INTERRUPT</spirit:name>
        <spirit:displayName>C_PIT4_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT4_INTERRUPT" spirit:choiceRef="choices_95">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPO1</spirit:name>
        <spirit:displayName>C_USE_GPO1</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPO1" spirit:choiceRef="choices_96">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPO1_SIZE</spirit:name>
        <spirit:displayName>C_GPO1_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO1_SIZE" spirit:minimum="1" spirit:maximum="32">3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector(31 downto 0)">
        <spirit:name>C_GPO1_INIT</spirit:name>
        <spirit:displayName>C_GPO1_INIT</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO1_INIT" spirit:bitStringLength="32">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPO2</spirit:name>
        <spirit:displayName>C_USE_GPO2</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPO2" spirit:choiceRef="choices_97">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPO2_SIZE</spirit:name>
        <spirit:displayName>C_GPO2_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO2_SIZE" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector(31 downto 0)">
        <spirit:name>C_GPO2_INIT</spirit:name>
        <spirit:displayName>C_GPO2_INIT</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO2_INIT" spirit:bitStringLength="32">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPO3</spirit:name>
        <spirit:displayName>C_USE_GPO3</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPO3" spirit:choiceRef="choices_98">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPO3_SIZE</spirit:name>
        <spirit:displayName>C_GPO3_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO3_SIZE" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector(31 downto 0)">
        <spirit:name>C_GPO3_INIT</spirit:name>
        <spirit:displayName>C_GPO3_INIT</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO3_INIT" spirit:bitStringLength="32">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPO4</spirit:name>
        <spirit:displayName>C_USE_GPO4</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPO4" spirit:choiceRef="choices_99">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPO4_SIZE</spirit:name>
        <spirit:displayName>C_GPO4_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO4_SIZE" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector(31 downto 0)">
        <spirit:name>C_GPO4_INIT</spirit:name>
        <spirit:displayName>C_GPO4_INIT</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO4_INIT" spirit:bitStringLength="32">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPI1</spirit:name>
        <spirit:displayName>C_USE_GPI1</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPI1" spirit:choiceRef="choices_100">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI1_SIZE</spirit:name>
        <spirit:displayName>C_GPI1_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI1_SIZE" spirit:minimum="1" spirit:maximum="32">3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI1_INTERRUPT</spirit:name>
        <spirit:displayName>C_GPI1_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI1_INTERRUPT" spirit:minimum="0" spirit:maximum="3">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPI2</spirit:name>
        <spirit:displayName>C_USE_GPI2</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPI2" spirit:choiceRef="choices_101">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI2_SIZE</spirit:name>
        <spirit:displayName>C_GPI2_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI2_SIZE" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI2_INTERRUPT</spirit:name>
        <spirit:displayName>C_GPI2_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI2_INTERRUPT" spirit:minimum="0" spirit:maximum="3">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPI3</spirit:name>
        <spirit:displayName>C_USE_GPI3</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPI3" spirit:choiceRef="choices_102">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI3_SIZE</spirit:name>
        <spirit:displayName>C_GPI3_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI3_SIZE" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI3_INTERRUPT</spirit:name>
        <spirit:displayName>C_GPI3_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI3_INTERRUPT" spirit:minimum="0" spirit:maximum="3">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPI4</spirit:name>
        <spirit:displayName>C_USE_GPI4</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPI4" spirit:choiceRef="choices_103">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI4_SIZE</spirit:name>
        <spirit:displayName>C_GPI4_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI4_SIZE" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI4_INTERRUPT</spirit:name>
        <spirit:displayName>C_GPI4_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI4_INTERRUPT" spirit:minimum="0" spirit:maximum="3">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_INTC_USE_EXT_INTR</spirit:name>
        <spirit:displayName>C_INTC_USE_EXT_INTR</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_INTC_USE_EXT_INTR" spirit:choiceRef="choices_104">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_INTC_INTR_SIZE</spirit:name>
        <spirit:displayName>C_INTC_INTR_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_INTC_INTR_SIZE" spirit:minimum="1" spirit:maximum="16">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector(15 downto 0)">
        <spirit:name>C_INTC_LEVEL_EDGE</spirit:name>
        <spirit:displayName>C_INTC_LEVEL_EDGE</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_INTC_LEVEL_EDGE" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector(15 downto 0)">
        <spirit:name>C_INTC_POSITIVE</spirit:name>
        <spirit:displayName>C_INTC_POSITIVE</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_INTC_POSITIVE" spirit:bitStringLength="16">0xFFFF</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector(15 downto 0)">
        <spirit:name>C_INTC_ASYNC_INTR</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_INTC_ASYNC_INTR" spirit:bitStringLength="16">0xFFFF</spirit:value>
        <spirit:vendorExtensions>
          <xilinx:parameterInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_INTC_USE_EXT_INTR&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:parameterInfo>
        </spirit:vendorExtensions>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_INTC_NUM_SYNC_FF</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_INTC_NUM_SYNC_FF" spirit:minimum="0" spirit:maximum="7">2</spirit:value>
        <spirit:vendorExtensions>
          <xilinx:parameterInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_INTC_USE_EXT_INTR&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:parameterInfo>
        </spirit:vendorExtensions>
      </spirit:modelParameter>
    </spirit:modelParameters>
  </spirit:model>
  <spirit:choices>
    <spirit:choice>
      <spirit:name>choices_0</spirit:name>
      <spirit:enumeration spirit:text="USER1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="USER2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="USER3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="USER4">4</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_1</spirit:name>
      <spirit:enumeration spirit:text="NONE">0</spirit:enumeration>
      <spirit:enumeration spirit:text="DEBUG ONLY">1</spirit:enumeration>
      <spirit:enumeration spirit:text="DEBUG &amp; UART">2</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_2</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_3</spirit:name>
      <spirit:enumeration spirit:text="4KB">4096</spirit:enumeration>
      <spirit:enumeration spirit:text="8KB">8192</spirit:enumeration>
      <spirit:enumeration spirit:text="12KB">12288</spirit:enumeration>
      <spirit:enumeration spirit:text="16KB">16384</spirit:enumeration>
      <spirit:enumeration spirit:text="20KB">20480</spirit:enumeration>
      <spirit:enumeration spirit:text="24KB">24576</spirit:enumeration>
      <spirit:enumeration spirit:text="32KB">32768</spirit:enumeration>
      <spirit:enumeration spirit:text="36KB">36864</spirit:enumeration>
      <spirit:enumeration spirit:text="40KB">40960</spirit:enumeration>
      <spirit:enumeration spirit:text="48KB">49152</spirit:enumeration>
      <spirit:enumeration spirit:text="64KB">65536</spirit:enumeration>
      <spirit:enumeration spirit:text="68KB">69632</spirit:enumeration>
      <spirit:enumeration spirit:text="72KB">73728</spirit:enumeration>
      <spirit:enumeration spirit:text="80KB">81920</spirit:enumeration>
      <spirit:enumeration spirit:text="96KB">98304</spirit:enumeration>
      <spirit:enumeration spirit:text="128KB">131072</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_4</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_5</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_6</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_7</spirit:name>
      <spirit:enumeration spirit:text="110">110</spirit:enumeration>
      <spirit:enumeration spirit:text="300">300</spirit:enumeration>
      <spirit:enumeration spirit:text="1200">1200</spirit:enumeration>
      <spirit:enumeration spirit:text="2400">2400</spirit:enumeration>
      <spirit:enumeration spirit:text="4800">4800</spirit:enumeration>
      <spirit:enumeration spirit:text="9600">9600</spirit:enumeration>
      <spirit:enumeration spirit:text="19200">19200</spirit:enumeration>
      <spirit:enumeration spirit:text="38400">38400</spirit:enumeration>
      <spirit:enumeration spirit:text="57600">57600</spirit:enumeration>
      <spirit:enumeration spirit:text="115200">115200</spirit:enumeration>
      <spirit:enumeration spirit:text="128000">128000</spirit:enumeration>
      <spirit:enumeration spirit:text="230400">230400</spirit:enumeration>
      <spirit:enumeration spirit:text="460800">460800</spirit:enumeration>
      <spirit:enumeration spirit:text="921600">921600</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_8</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_9</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_10</spirit:name>
      <spirit:enumeration spirit:text="Even">0</spirit:enumeration>
      <spirit:enumeration spirit:text="Odd">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_11</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_12</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_13</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_14</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_15</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_16</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_17</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_18</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_19</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_20</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_21</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_22</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_23</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_24</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT2">6</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT3">7</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT4">8</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_25</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_26</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_27</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_28</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT1">5</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT3">7</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT4">8</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_29</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_30</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_31</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_32</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT1">5</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT2">6</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT4">8</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_33</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_34</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_35</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_36</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT1">5</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT2">6</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT3">7</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_37</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_38</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_39</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_40</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_41</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_42</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_43</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="Both Edges">1</spirit:enumeration>
      <spirit:enumeration spirit:text="Rising Edge">2</spirit:enumeration>
      <spirit:enumeration spirit:text="Falling Edge">3</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_44</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_45</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="Both Edges">1</spirit:enumeration>
      <spirit:enumeration spirit:text="Rising Edge">2</spirit:enumeration>
      <spirit:enumeration spirit:text="Falling Edge">3</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_46</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_47</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="Both Edges">1</spirit:enumeration>
      <spirit:enumeration spirit:text="Rising Edge">2</spirit:enumeration>
      <spirit:enumeration spirit:text="Falling Edge">3</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_48</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_49</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="Both Edges">1</spirit:enumeration>
      <spirit:enumeration spirit:text="Rising Edge">2</spirit:enumeration>
      <spirit:enumeration spirit:text="Falling Edge">3</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_50</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_51</spirit:name>
      <spirit:enumeration spirit:text="Custom">Custom</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_52</spirit:name>
      <spirit:enumeration spirit:text="Custom">Custom</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_53</spirit:name>
      <spirit:enumeration spirit:text="Custom">Custom</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_54</spirit:name>
      <spirit:enumeration spirit:text="Custom">Custom</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_55</spirit:name>
      <spirit:enumeration spirit:text="Custom">Custom</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_56</spirit:name>
      <spirit:enumeration spirit:text="Custom">Custom</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_57</spirit:name>
      <spirit:enumeration spirit:text="Custom">Custom</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_58</spirit:name>
      <spirit:enumeration spirit:text="4KB">4096</spirit:enumeration>
      <spirit:enumeration spirit:text="8KB">8192</spirit:enumeration>
      <spirit:enumeration spirit:text="12KB">12288</spirit:enumeration>
      <spirit:enumeration spirit:text="16KB">16384</spirit:enumeration>
      <spirit:enumeration spirit:text="20KB">20480</spirit:enumeration>
      <spirit:enumeration spirit:text="24KB">24576</spirit:enumeration>
      <spirit:enumeration spirit:text="32KB">32768</spirit:enumeration>
      <spirit:enumeration spirit:text="36KB">36864</spirit:enumeration>
      <spirit:enumeration spirit:text="40KB">40960</spirit:enumeration>
      <spirit:enumeration spirit:text="48KB">49152</spirit:enumeration>
      <spirit:enumeration spirit:text="64KB">65536</spirit:enumeration>
      <spirit:enumeration spirit:text="68KB">69632</spirit:enumeration>
      <spirit:enumeration spirit:text="72KB">73728</spirit:enumeration>
      <spirit:enumeration spirit:text="80KB">81920</spirit:enumeration>
      <spirit:enumeration spirit:text="96KB">98304</spirit:enumeration>
      <spirit:enumeration spirit:text="128KB">131072</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_59</spirit:name>
      <spirit:enumeration spirit:text="NONE">0</spirit:enumeration>
      <spirit:enumeration spirit:text="DEBUG ONLY">1</spirit:enumeration>
      <spirit:enumeration spirit:text="DEBUG &amp; UART">2</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_60</spirit:name>
      <spirit:enumeration spirit:text="USER1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="USER2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="USER3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="USER4">4</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_61</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_62</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_63</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_64</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_65</spirit:name>
      <spirit:enumeration spirit:text="110">110</spirit:enumeration>
      <spirit:enumeration spirit:text="300">300</spirit:enumeration>
      <spirit:enumeration spirit:text="1200">1200</spirit:enumeration>
      <spirit:enumeration spirit:text="2400">2400</spirit:enumeration>
      <spirit:enumeration spirit:text="4800">4800</spirit:enumeration>
      <spirit:enumeration spirit:text="9600">9600</spirit:enumeration>
      <spirit:enumeration spirit:text="19200">19200</spirit:enumeration>
      <spirit:enumeration spirit:text="38400">38400</spirit:enumeration>
      <spirit:enumeration spirit:text="57600">57600</spirit:enumeration>
      <spirit:enumeration spirit:text="115200">115200</spirit:enumeration>
      <spirit:enumeration spirit:text="128000">128000</spirit:enumeration>
      <spirit:enumeration spirit:text="230400">230400</spirit:enumeration>
      <spirit:enumeration spirit:text="460800">460800</spirit:enumeration>
      <spirit:enumeration spirit:text="921600">921600</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_66</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_67</spirit:name>
      <spirit:enumeration spirit:text="Even">0</spirit:enumeration>
      <spirit:enumeration spirit:text="Odd">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_68</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_69</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_70</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_71</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_72</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_73</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_74</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_75</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_76</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_77</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_78</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_79</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_80</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_81</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_82</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT2">6</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT3">7</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT4">8</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_83</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_84</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_85</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_86</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT1">5</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT3">7</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT4">8</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_87</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_88</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_89</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_90</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT1">5</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT2">6</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT4">8</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_91</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_92</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_93</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_94</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT1">5</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT2">6</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT3">7</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_95</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_96</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_97</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_98</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_99</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_100</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_101</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_102</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_103</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_104</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
  </spirit:choices>
  <spirit:fileSets>
    <spirit:fileSet>
      <spirit:name>xilinx_vhdlinstantiationtemplate_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>microblaze_mcs_0.vho</spirit:name>
        <spirit:userFileType>vhdlTemplate</spirit:userFileType>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_versioninformation_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>doc/microblaze_mcs_v2_2_changelog.txt</spirit:name>
        <spirit:userFileType>text</spirit:userFileType>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_vhdlsynthesis_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>microblaze_mcs_0.bmm</spirit:name>
        <spirit:userFileType>USED_IN_synthesis</spirit:userFileType>
        <spirit:userFileType>USED_IN_implementation</spirit:userFileType>
        <spirit:userFileType>bmm</spirit:userFileType>
        <spirit:userFileType>SCOPED_TO_REF_microblaze_mcs_0</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_0_sdk.xml</spirit:name>
        <spirit:userFileType>xml</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>mb_bootloop_le.elf</spirit:name>
        <spirit:userFileType>elf</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_0.xdc</spirit:name>
        <spirit:userFileType>xdc</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_0_ooc.xdc</spirit:name>
        <spirit:userFileType>xdc</spirit:userFileType>
        <spirit:userFileType>USED_IN_out_of_context</spirit:userFileType>
        <spirit:userFileType>USED_IN_synthesis</spirit:userFileType>
        <spirit:userFileType>USED_IN_implementation</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/xilinx_primitives.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/pselect_mask.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/divide_part.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/fit_module.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/gpi_module.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/gpo_module.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/intr_ctrl.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/pit_module.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/uart_control_status.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/uart_receive.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/uart_transmit.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/iomodule_core.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/iomodule.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/lmb_bram_if_funcs.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/xor18.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/parity.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/parityenable.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/checkbit_handler.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/correct_one_bit.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/pselect.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/pselect_mask.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/axi_interface.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/lmb_mux.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/lmb_bram_if_cntlr.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_v10_v3_0/pcores/lmb_v10_v3_0/hdl/vhdl/lmb_v10.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_v10_v3_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>proc_common_v4_0/pcores/proc_common_v4_0/hdl/vhdl/family_support.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>proc_common_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>proc_common_v4_0/pcores/proc_common_v4_0/hdl/vhdl/proc_common_pkg.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>proc_common_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>proc_common_v4_0/pcores/proc_common_v4_0/hdl/vhdl/ipif_pkg.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>proc_common_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>proc_common_v4_0/pcores/proc_common_v4_0/hdl/vhdl/pselect.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>proc_common_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>proc_common_v4_0/pcores/proc_common_v4_0/hdl/vhdl/pselect_f.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>proc_common_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>proc_common_v4_0/pcores/proc_common_v4_0/hdl/vhdl/counter_f.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>proc_common_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>axi_lite_ipif_v2_0/pcores/axi_lite_ipif_v2_0/hdl/vhdl/address_decoder.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>axi_lite_ipif_v2_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>axi_lite_ipif_v2_0/pcores/axi_lite_ipif_v2_0/hdl/vhdl/slave_attachment.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>axi_lite_ipif_v2_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>axi_lite_ipif_v2_0/pcores/axi_lite_ipif_v2_0/hdl/vhdl/axi_lite_ipif.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>axi_lite_ipif_v2_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>mdm_v3_1/pcores/mdm_v3_1/hdl/vhdl/srl_fifo.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>mdm_v3_1</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>mdm_v3_1/pcores/mdm_v3_1/hdl/vhdl/bus_master.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>mdm_v3_1</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>mdm_v3_1/pcores/mdm_v3_1/hdl/vhdl/jtag_control.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>mdm_v3_1</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>mdm_v3_1/pcores/mdm_v3_1/hdl/vhdl/mdm_core.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>mdm_v3_1</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>mdm_v3_1/pcores/mdm_v3_1/hdl/vhdl/mdm.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>mdm_v3_1</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_v2_2/hdl/ram_module_top.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>microblaze_mcs_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_v2_2/hdl/lmb_bram.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>microblaze_mcs_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_v2_2/hdl/lmb2axi.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>microblaze_mcs_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_v2_2/hdl/microblaze_mcs.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>microblaze_mcs_v2_2</spirit:logicalName>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_vhdlsynthesis_xilinx_com_ip_microblaze_9_3__ref_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>data/mb_bootloop_le.elf</spirit:name>
        <spirit:userFileType>elf</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_v9_3/hdl/microblaze_v9_3_vh_rfs.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>microblaze_v9_3</spirit:logicalName>
      </spirit:file>
      <spirit:vendorExtensions>
        <xilinx:subCoreRef>
          <xilinx:componentRef xilinx:vendor="xilinx.com" xilinx:library="ip" xilinx:name="microblaze" xilinx:version="9.3" xilinx:isGenerated="true" xilinx:checksum="0f94df2a">
            <xilinx:mode xilinx:name="copy_mode"/>
          </xilinx:componentRef>
        </xilinx:subCoreRef>
      </spirit:vendorExtensions>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_vhdlsynthesiswrapper_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>synth/microblaze_mcs_0.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_implementation_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>microblaze_mcs_0_board.xdc</spirit:name>
        <spirit:userFileType>xdc</spirit:userFileType>
        <spirit:userFileType>USED_IN_synthesis</spirit:userFileType>
        <spirit:userFileType>USED_IN_implementation</spirit:userFileType>
        <spirit:userFileType>USED_IN_board</spirit:userFileType>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_vhdlbehavioralsimulation_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>microblaze_mcs_0.bmm</spirit:name>
        <spirit:userFileType>USED_IN_synthesis</spirit:userFileType>
        <spirit:userFileType>USED_IN_implementation</spirit:userFileType>
        <spirit:userFileType>bmm</spirit:userFileType>
        <spirit:userFileType>SCOPED_TO_REF_microblaze_mcs_0</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_0_sdk.xml</spirit:name>
        <spirit:userFileType>xml</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>mb_bootloop_le.elf</spirit:name>
        <spirit:userFileType>elf</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/xilinx_primitives.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/pselect_mask.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/divide_part.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/fit_module.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/gpi_module.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/gpo_module.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/intr_ctrl.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/pit_module.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/uart_control_status.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/uart_receive.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/uart_transmit.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/iomodule_core.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>iomodule_v2_2/pcores/iomodule_v2_2/hdl/vhdl/iomodule.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>iomodule_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/lmb_bram_if_funcs.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/xor18.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/parity.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/parityenable.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/checkbit_handler.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/correct_one_bit.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/pselect.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/pselect_mask.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/axi_interface.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/lmb_mux.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_bram_if_cntlr_v4_0/pcores/lmb_bram_if_cntlr_v4_0/hdl/vhdl/lmb_bram_if_cntlr.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_bram_if_cntlr_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>lmb_v10_v3_0/pcores/lmb_v10_v3_0/hdl/vhdl/lmb_v10.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>lmb_v10_v3_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>proc_common_v4_0/pcores/proc_common_v4_0/hdl/vhdl/family_support.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>proc_common_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>proc_common_v4_0/pcores/proc_common_v4_0/hdl/vhdl/proc_common_pkg.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>proc_common_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>proc_common_v4_0/pcores/proc_common_v4_0/hdl/vhdl/ipif_pkg.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>proc_common_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>proc_common_v4_0/pcores/proc_common_v4_0/hdl/vhdl/pselect.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>proc_common_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>proc_common_v4_0/pcores/proc_common_v4_0/hdl/vhdl/pselect_f.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>proc_common_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>proc_common_v4_0/pcores/proc_common_v4_0/hdl/vhdl/counter_f.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>proc_common_v4_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>axi_lite_ipif_v2_0/pcores/axi_lite_ipif_v2_0/hdl/vhdl/address_decoder.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>axi_lite_ipif_v2_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>axi_lite_ipif_v2_0/pcores/axi_lite_ipif_v2_0/hdl/vhdl/slave_attachment.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>axi_lite_ipif_v2_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>axi_lite_ipif_v2_0/pcores/axi_lite_ipif_v2_0/hdl/vhdl/axi_lite_ipif.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>axi_lite_ipif_v2_0</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>mdm_v3_1/pcores/mdm_v3_1/hdl/vhdl/srl_fifo.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>mdm_v3_1</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>mdm_v3_1/pcores/mdm_v3_1/hdl/vhdl/bus_master.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>mdm_v3_1</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>mdm_v3_1/pcores/mdm_v3_1/hdl/vhdl/jtag_control.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>mdm_v3_1</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>mdm_v3_1/pcores/mdm_v3_1/hdl/vhdl/mdm_core.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>mdm_v3_1</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>mdm_v3_1/pcores/mdm_v3_1/hdl/vhdl/mdm.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>mdm_v3_1</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_v2_2/hdl/ram_module_top.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>microblaze_mcs_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_v2_2/hdl/lmb_bram.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>microblaze_mcs_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_v2_2/hdl/lmb2axi.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>microblaze_mcs_v2_2</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_v2_2/hdl/microblaze_mcs.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>microblaze_mcs_v2_2</spirit:logicalName>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_vhdlbehavioralsimulation_xilinx_com_ip_microblaze_9_3__ref_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>data/mb_bootloop_le.elf</spirit:name>
        <spirit:userFileType>elf</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_v9_3/hdl/microblaze_v9_3_vh_rfs.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>microblaze_v9_3</spirit:logicalName>
      </spirit:file>
      <spirit:vendorExtensions>
        <xilinx:subCoreRef>
          <xilinx:componentRef xilinx:vendor="xilinx.com" xilinx:library="ip" xilinx:name="microblaze" xilinx:version="9.3" xilinx:isGenerated="true" xilinx:checksum="1f817bbf">
            <xilinx:mode xilinx:name="copy_mode"/>
          </xilinx:componentRef>
        </xilinx:subCoreRef>
      </spirit:vendorExtensions>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_vhdlsimulationwrapper_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>sim/microblaze_mcs_0.vhd</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_externalfiles_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>microblaze_mcs_0.dcp</spirit:name>
        <spirit:userFileType>dcp</spirit:userFileType>
        <spirit:userFileType>USED_IN_synthesis</spirit:userFileType>
        <spirit:userFileType>USED_IN_implementation</spirit:userFileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_0_stub.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:userFileType>USED_IN_synth_blackbox_stub</spirit:userFileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_0_stub.vhdl</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:userFileType>USED_IN_synth_blackbox_stub</spirit:userFileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_0_funcsim.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:userFileType>USED_IN_simulation</spirit:userFileType>
        <spirit:userFileType>USED_IN_single_language</spirit:userFileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_0_funcsim.vhdl</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:userFileType>USED_IN_simulation</spirit:userFileType>
        <spirit:userFileType>USED_IN_single_language</spirit:userFileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
    </spirit:fileSet>
  </spirit:fileSets>
  <spirit:cpus>
    <spirit:cpu>
      <spirit:name>microblaze</spirit:name>
      <spirit:addressSpaceRef spirit:addressSpaceRef="dummy"/>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>bootloop_file</spirit:name>
          <spirit:value>mb_bootloop_le.elf</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>instance_path</spirit:name>
          <spirit:value>microblaze_I</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:cpu>
  </spirit:cpus>
  <spirit:description>MicroBlaze Micro Controller System (MCS) is a light-weight general purpose micro controller system, based on the MicroBlaze processor. It is primarily intended for simple control applications, where a hardware solution would be less flexible and more difficult to implement. Software development with the Xilinx Software Development Kit (SDK) is supported, including a software driver for the peripherals. Debugging including UART is available either via SDK or directly with the Xilinx Microprocessor Debugger.
The MCS consists of the processor itself, local memory with sizes ranging from 4KB to 128KB, up to 4 Fixed Interval Timers, up to 4 Programmable Interval Timers, up to 4 32-bit General Purpose Output ports, up to 4 32-bit General Purpose Input ports, and an Interrupt Controller with up to 16 external interrupt inputs.
</spirit:description>
  <spirit:parameters>
    <spirit:parameter>
      <spirit:name>JTAG_CHAIN</spirit:name>
      <spirit:displayName>Debug JTAG User-defined Register</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.JTAG_CHAIN" spirit:choiceRef="choices_0" spirit:order="1065" spirit:configGroups="1 NoDisplay">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>MICROBLAZE_INSTANCE</spirit:name>
      <spirit:displayName>MicroBlaze Instance Name</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.MICROBLAZE_INSTANCE" spirit:order="1010" spirit:configGroups="1 NoDisplay">microblaze_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>AVOID_PRIMITIVES</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.AVOID_PRIMITIVES" spirit:order="1015" spirit:configGroups="1 NoDisplay">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PATH</spirit:name>
      <spirit:displayName>Instance Hierarchical Design Name</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PATH" spirit:order="1020" spirit:configGroups="1 NoDisplay">mcs_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FREQ</spirit:name>
      <spirit:displayName>Input Clock Frequency (MHz)</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FREQ" spirit:order="1030" spirit:configGroups="1 System">100</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>DEBUG_ENABLED</spirit:name>
      <spirit:displayName>Enable Debug Support</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.DEBUG_ENABLED" spirit:choiceRef="choices_1" spirit:order="1060" spirit:configGroups="1 System">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>TRACE</spirit:name>
      <spirit:displayName>Enable MicroBlaze Trace Bus</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.TRACE" spirit:choiceRef="choices_2" spirit:order="1070" spirit:configGroups="1 System">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>MEMSIZE</spirit:name>
      <spirit:displayName>Memory Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.MEMSIZE" spirit:choiceRef="choices_3" spirit:order="1040" spirit:configGroups="1 System">8192</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_IO_BUS</spirit:name>
      <spirit:displayName>Enable IO Bus</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_IO_BUS" spirit:choiceRef="choices_4" spirit:order="1050" spirit:configGroups="1 System">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_UART_RX</spirit:name>
      <spirit:displayName>Enable Receiver</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_UART_RX" spirit:choiceRef="choices_5" spirit:order="2000" spirit:configGroups="2 UART">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_UART_TX</spirit:name>
      <spirit:displayName>Enable Transmitter</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_UART_TX" spirit:choiceRef="choices_6" spirit:order="2100" spirit:configGroups="2 UART">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_BAUDRATE</spirit:name>
      <spirit:displayName>Define Baud Rate</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_BAUDRATE" spirit:choiceRef="choices_7" spirit:order="2200" spirit:configGroups="2 UART">115200</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_PROG_BAUDRATE</spirit:name>
      <spirit:displayName>Programmable Baud Rate</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_PROG_BAUDRATE" spirit:choiceRef="choices_8" spirit:order="2300" spirit:configGroups="2 UART">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_DATA_BITS</spirit:name>
      <spirit:displayName>Number of Data Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_DATA_BITS" spirit:order="2400" spirit:configGroups="2 UART" spirit:minimum="5" spirit:maximum="8">8</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_USE_PARITY</spirit:name>
      <spirit:displayName>Use Parity</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_USE_PARITY" spirit:choiceRef="choices_9" spirit:order="2500" spirit:configGroups="2 UART">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_ODD_PARITY</spirit:name>
      <spirit:displayName>Even or Odd Parity</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_ODD_PARITY" spirit:choiceRef="choices_10" spirit:order="2600" spirit:configGroups="2 UART">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_RX_INTERRUPT</spirit:name>
      <spirit:displayName>Implement Receive Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_RX_INTERRUPT" spirit:choiceRef="choices_11" spirit:order="2700" spirit:configGroups="2 UART">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_TX_INTERRUPT</spirit:name>
      <spirit:displayName>Implement Transmit Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_TX_INTERRUPT" spirit:choiceRef="choices_12" spirit:order="2800" spirit:configGroups="2 UART">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_ERROR_INTERRUPT</spirit:name>
      <spirit:displayName>Implement Error Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_ERROR_INTERRUPT" spirit:choiceRef="choices_13" spirit:order="2900" spirit:configGroups="2 UART">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_FIT1</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_FIT1" spirit:choiceRef="choices_14" spirit:order="3001" spirit:configGroups="3 FIT1">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT1_No_CLOCKS</spirit:name>
      <spirit:displayName>Number of Clocks Between Strobes</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT1_No_CLOCKS" spirit:order="3002" spirit:configGroups="3 FIT1" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT1_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT1_INTERRUPT" spirit:choiceRef="choices_15" spirit:order="3005" spirit:configGroups="3 FIT1">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_FIT2</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_FIT2" spirit:choiceRef="choices_16" spirit:order="3101" spirit:configGroups="3 FIT2">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT2_No_CLOCKS</spirit:name>
      <spirit:displayName>Number of Clocks Between Strobes</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT2_No_CLOCKS" spirit:order="3102" spirit:configGroups="3 FIT2" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT2_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT2_INTERRUPT" spirit:choiceRef="choices_17" spirit:order="3105" spirit:configGroups="3 FIT2">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_FIT3</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_FIT3" spirit:choiceRef="choices_18" spirit:order="3201" spirit:configGroups="3 FIT3">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT3_No_CLOCKS</spirit:name>
      <spirit:displayName>Number of Clocks Between Strobes</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT3_No_CLOCKS" spirit:order="3202" spirit:configGroups="3 FIT3" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT3_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT3_INTERRUPT" spirit:choiceRef="choices_19" spirit:order="3205" spirit:configGroups="3 FIT3">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_FIT4</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_FIT4" spirit:choiceRef="choices_20" spirit:order="3301" spirit:configGroups="3 FIT4">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT4_No_CLOCKS</spirit:name>
      <spirit:displayName>Number of Clocks Between Strobes</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT4_No_CLOCKS" spirit:order="3302" spirit:configGroups="3 FIT4" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT4_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT4_INTERRUPT" spirit:choiceRef="choices_21" spirit:order="3305" spirit:configGroups="3 FIT4">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_PIT1</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_PIT1" spirit:choiceRef="choices_22" spirit:order="4001" spirit:configGroups="4 PIT1">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT1_SIZE</spirit:name>
      <spirit:displayName>Number of Bits for Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT1_SIZE" spirit:order="4002" spirit:configGroups="4 PIT1" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT1_READABLE</spirit:name>
      <spirit:displayName>Shall Counter Value Be Readable</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT1_READABLE" spirit:choiceRef="choices_23" spirit:order="4003" spirit:configGroups="4 PIT1">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT1_PRESCALER</spirit:name>
      <spirit:displayName>Define Prescaler</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT1_PRESCALER" spirit:choiceRef="choices_24" spirit:order="4004" spirit:configGroups="4 PIT1">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT1_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT1_INTERRUPT" spirit:choiceRef="choices_25" spirit:order="4008" spirit:configGroups="4 PIT1">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_PIT2</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_PIT2" spirit:choiceRef="choices_26" spirit:order="4101" spirit:configGroups="4 PIT2">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT2_SIZE</spirit:name>
      <spirit:displayName>Number of Bits for Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT2_SIZE" spirit:order="4102" spirit:configGroups="4 PIT2" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT2_READABLE</spirit:name>
      <spirit:displayName>Shall Counter Value Be Readable</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT2_READABLE" spirit:choiceRef="choices_27" spirit:order="4103" spirit:configGroups="4 PIT2">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT2_PRESCALER</spirit:name>
      <spirit:displayName>Define Prescaler</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT2_PRESCALER" spirit:choiceRef="choices_28" spirit:order="4104" spirit:configGroups="4 PIT2">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT2_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT2_INTERRUPT" spirit:choiceRef="choices_29" spirit:order="4108" spirit:configGroups="4 PIT2">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_PIT3</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_PIT3" spirit:choiceRef="choices_30" spirit:order="4201" spirit:configGroups="4 PIT3">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT3_SIZE</spirit:name>
      <spirit:displayName>Number of Bits for Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT3_SIZE" spirit:order="4202" spirit:configGroups="4 PIT3" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT3_READABLE</spirit:name>
      <spirit:displayName>Shall Counter Value Be Readable</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT3_READABLE" spirit:choiceRef="choices_31" spirit:order="4203" spirit:configGroups="4 PIT3">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT3_PRESCALER</spirit:name>
      <spirit:displayName>Define Prescaler</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT3_PRESCALER" spirit:choiceRef="choices_32" spirit:order="4204" spirit:configGroups="4 PIT3">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT3_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT3_INTERRUPT" spirit:choiceRef="choices_33" spirit:order="4208" spirit:configGroups="4 PIT3">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_PIT4</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_PIT4" spirit:choiceRef="choices_34" spirit:order="4301" spirit:configGroups="4 PIT4">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT4_SIZE</spirit:name>
      <spirit:displayName>Number of Bits for Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT4_SIZE" spirit:order="4302" spirit:configGroups="4 PIT4" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT4_READABLE</spirit:name>
      <spirit:displayName>Shall Counter Value Be Readable</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT4_READABLE" spirit:choiceRef="choices_35" spirit:order="4303" spirit:configGroups="4 PIT4">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT4_PRESCALER</spirit:name>
      <spirit:displayName>Define Prescaler</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT4_PRESCALER" spirit:choiceRef="choices_36" spirit:order="4304" spirit:configGroups="4 PIT4">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT4_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT4_INTERRUPT" spirit:choiceRef="choices_37" spirit:order="4308" spirit:configGroups="4 PIT4">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPO1</spirit:name>
      <spirit:displayName>Use GPO</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPO1" spirit:choiceRef="choices_38" spirit:order="5000" spirit:configGroups="5 GPO1">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO1_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO1_SIZE" spirit:order="5001" spirit:configGroups="5 GPO1" spirit:minimum="1" spirit:maximum="32">3</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO1_INIT</spirit:name>
      <spirit:displayName>Initial Value of GPO</spirit:displayName>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO1_INIT" spirit:order="5002" spirit:configGroups="5 GPO1" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPO2</spirit:name>
      <spirit:displayName>Use GPO</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPO2" spirit:choiceRef="choices_39" spirit:order="5100" spirit:configGroups="5 GPO2">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO2_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO2_SIZE" spirit:order="5101" spirit:configGroups="5 GPO2" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO2_INIT</spirit:name>
      <spirit:displayName>Initial Value of GPO</spirit:displayName>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO2_INIT" spirit:order="5102" spirit:configGroups="5 GPO2" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPO3</spirit:name>
      <spirit:displayName>Use GPO</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPO3" spirit:choiceRef="choices_40" spirit:order="5200" spirit:configGroups="5 GPO3">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO3_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO3_SIZE" spirit:order="5201" spirit:configGroups="5 GPO3" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO3_INIT</spirit:name>
      <spirit:displayName>Initial Value of GPO</spirit:displayName>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO3_INIT" spirit:order="5202" spirit:configGroups="5 GPO3" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPO4</spirit:name>
      <spirit:displayName>Use GPO</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPO4" spirit:choiceRef="choices_41" spirit:order="5300" spirit:configGroups="5 GPO4">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO4_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO4_SIZE" spirit:order="5301" spirit:configGroups="5 GPO4" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO4_INIT</spirit:name>
      <spirit:displayName>Initial Value of GPO</spirit:displayName>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO4_INIT" spirit:order="5302" spirit:configGroups="5 GPO4" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPI1</spirit:name>
      <spirit:displayName>Use GPI</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPI1" spirit:choiceRef="choices_42" spirit:order="6000" spirit:configGroups="6 GPI1">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI1_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI1_SIZE" spirit:order="6001" spirit:configGroups="6 GPI1" spirit:minimum="1" spirit:maximum="32">3</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI1_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI1_INTERRUPT" spirit:choiceRef="choices_43" spirit:order="6002" spirit:configGroups="6 GPI1">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPI2</spirit:name>
      <spirit:displayName>Use GPI</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPI2" spirit:choiceRef="choices_44" spirit:order="6100" spirit:configGroups="6 GPI2">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI2_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI2_SIZE" spirit:order="6101" spirit:configGroups="6 GPI2" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI2_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI2_INTERRUPT" spirit:choiceRef="choices_45" spirit:order="6102" spirit:configGroups="6 GPI2">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPI3</spirit:name>
      <spirit:displayName>Use GPI</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPI3" spirit:choiceRef="choices_46" spirit:order="6200" spirit:configGroups="6 GPI3">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI3_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI3_SIZE" spirit:order="6201" spirit:configGroups="6 GPI3" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI3_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI3_INTERRUPT" spirit:choiceRef="choices_47" spirit:order="6202" spirit:configGroups="6 GPI3">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPI4</spirit:name>
      <spirit:displayName>Use GPI</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPI4" spirit:choiceRef="choices_48" spirit:order="6300" spirit:configGroups="6 GPI4">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI4_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI4_SIZE" spirit:order="6301" spirit:configGroups="6 GPI4" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI4_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI4_INTERRUPT" spirit:choiceRef="choices_49" spirit:order="6302" spirit:configGroups="6 GPI4">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>INTC_USE_EXT_INTR</spirit:name>
      <spirit:displayName>Use External Interrupts</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.INTC_USE_EXT_INTR" spirit:choiceRef="choices_50" spirit:order="7000" spirit:configGroups="7 Interrupt">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>INTC_INTR_SIZE</spirit:name>
      <spirit:displayName>Number of External Inputs</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.INTC_INTR_SIZE" spirit:order="7100" spirit:configGroups="7 Interrupt" spirit:minimum="1" spirit:maximum="16">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>INTC_LEVEL_EDGE</spirit:name>
      <spirit:displayName>Level or Edge of External Interrupts</spirit:displayName>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.INTC_LEVEL_EDGE" spirit:order="7200" spirit:configGroups="7 Interrupt" spirit:bitStringLength="16">0x0000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>INTC_POSITIVE</spirit:name>
      <spirit:displayName>Positive or Negative External Interrupts</spirit:displayName>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.INTC_POSITIVE" spirit:order="7300" spirit:configGroups="7 Interrupt" spirit:bitStringLength="16">0xFFFF</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>INTC_ASYNC_INTR</spirit:name>
      <spirit:displayName>Interrupts asynchronous</spirit:displayName>
      <spirit:description>The setting of each bit in this option indicates whether the incoming interrupt is treated as asynchronous or not. 0 = Synchronous, 1 = Asynchronous.</spirit:description>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.INTC_ASYNC_INTR" spirit:order="7400" spirit:bitStringLength="16">0xFFFF</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>INTC_NUM_SYNC_FF</spirit:name>
      <spirit:displayName>Number of synchronization flip-flops</spirit:displayName>
      <spirit:description>Number of synchronization flip-flops used to synchronize asynchronous interupt inputs</spirit:description>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.INTC_NUM_SYNC_FF" spirit:order="7500" spirit:minimum="0" spirit:maximum="7">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Component_Name</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.Component_Name" spirit:order="1">microblaze_mcs_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_BOARD_FLOW</spirit:name>
      <spirit:displayName>Generate Board based IO Constraints</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_BOARD_FLOW" spirit:order="100" spirit:configGroups="0 Board">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>CLK_BOARD_INTERFACE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.CLK_BOARD_INTERFACE" spirit:choiceRef="choices_51" spirit:order="103" spirit:configGroups="0 Board">Custom</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>RESET_BOARD_INTERFACE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.RESET_BOARD_INTERFACE" spirit:choiceRef="choices_52" spirit:order="106" spirit:configGroups="0 Board">Custom</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPIO1_BOARD_INTERFACE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.GPIO1_BOARD_INTERFACE" spirit:choiceRef="choices_53" spirit:order="110" spirit:configGroups="0 Board">Custom</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPIO2_BOARD_INTERFACE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.GPIO2_BOARD_INTERFACE" spirit:choiceRef="choices_54" spirit:order="120" spirit:configGroups="0 Board">Custom</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPIO3_BOARD_INTERFACE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.GPIO3_BOARD_INTERFACE" spirit:choiceRef="choices_55" spirit:order="130" spirit:configGroups="0 Board">Custom</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPIO4_BOARD_INTERFACE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.GPIO4_BOARD_INTERFACE" spirit:choiceRef="choices_56" spirit:order="140" spirit:configGroups="0 Board">Custom</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_BOARD_INTERFACE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.UART_BOARD_INTERFACE" spirit:choiceRef="choices_57" spirit:order="150" spirit:configGroups="0 Board">Custom</spirit:value>
    </spirit:parameter>
  </spirit:parameters>
  <spirit:vendorExtensions>
    <xilinx:coreExtensions>
      <xilinx:supportedFamilies>
        <xilinx:family xilinx:lifeCycle="Production">aartix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">artix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">artix7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">azynq</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">kintex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">kintex7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Pre-Production">kintexu</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qartix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qkintex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qkintex7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qvirtex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qzynq</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">virtex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Pre-Production">virtexu</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">zynq</xilinx:family>
      </xilinx:supportedFamilies>
      <xilinx:taxonomies>
        <xilinx:taxonomy>/Embedded Processing/Processor</xilinx:taxonomy>
      </xilinx:taxonomies>
      <xilinx:displayName>MicroBlaze MCS</xilinx:displayName>
      <xilinx:coreRevision>3</xilinx:coreRevision>
      <xilinx:paymentRequired>false</xilinx:paymentRequired>
      <xilinx:upgrades>
        <xilinx:canUpgradeFrom>xilinx.com:ip:microblaze_mcs:1.0</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:microblaze_mcs:1.1</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:microblaze_mcs:1.2</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:microblaze_mcs:1.3</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:microblaze_mcs:2.0</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:microblaze_mcs:2.1</xilinx:canUpgradeFrom>
      </xilinx:upgrades>
      <xilinx:coreCreationDateTime>2014-11-18T07:59:03Z</xilinx:coreCreationDateTime>
    </xilinx:coreExtensions>
    <xilinx:packagingInfo>
      <xilinx:xilinxVersion>2014.4</xilinx:xilinxVersion>
      <xilinx:checksum xilinx:scope="busInterfaces" xilinx:value="76cbf0a5"/>
      <xilinx:checksum xilinx:scope="fileGroups" xilinx:value="250a2d87"/>
      <xilinx:checksum xilinx:scope="ports" xilinx:value="33470541"/>
      <xilinx:checksum xilinx:scope="hdlParameters" xilinx:value="8224089f"/>
      <xilinx:checksum xilinx:scope="cpus" xilinx:value="1b10ce8a"/>
      <xilinx:checksum xilinx:scope="parameters" xilinx:value="428cd29f"/>
    </xilinx:packagingInfo>
  </spirit:vendorExtensions>
</spirit:component>