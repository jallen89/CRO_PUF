Copyright 1986-2014 Xilinx, Inc. All Rights Reserved.
------------------------------------------------------------------------------------
| Tool Version : Vivado v.2014.4 (win64) Build 1071353 Tue Nov 18 18:24:04 MST 2014
| Date         : Tue Apr 19 21:32:27 2016
| Host         : peck running 64-bit major release  (build 9200)
| Command      : report_drc
------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
           Max violations: <unlimited>
         Violations found: 19

2. REPORT DETAILS
-----------------
CFGBVS-1#1 Warning
Missing CFGBVS and CONFIG_VOLTAGE Design Properties  
Neither the CFGBVS nor CONFIG_VOLTAGE voltage property is set in the current_design.  Configuration bank voltage select (CFGBVS) must be set to VCCO or GND, and CONFIG_VOLTAGE must be set to the correct configuration voltage, in order to determine the I/O voltage support for the pins in bank 0.  It is suggested to specify these either using the 'Edit Device Properties' function in the GUI or directly in the XDC file using the following syntax:

 set_property CFGBVS value1 [current_design]
 #where value1 is either VCCO or GND

 set_property CONFIG_VOLTAGE value2 [current_design]
 #where value2 is the voltage provided to configuration bank 0

Refer to the device configuration user guide for more information.
Related violations: <none>

LUTLP-1#1 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[0].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[0].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[0].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[0].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[0].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[0].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[0].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[0].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[0].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[0].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#2 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[10].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[10].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[10].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[10].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[10].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[10].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[10].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[10].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[10].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[10].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#3 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[11].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[11].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[11].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[11].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[11].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[11].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[11].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[11].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[11].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[11].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#4 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[12].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[12].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[12].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[12].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[12].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[12].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[12].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[12].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[12].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[12].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#5 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[13].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[13].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[13].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[13].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[13].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[13].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[13].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[13].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[13].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[13].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#6 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[14].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[14].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[14].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[14].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[14].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[14].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[14].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[14].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[14].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[14].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#7 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[15].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[15].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[15].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[15].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[15].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[15].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[15].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[15].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[15].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[15].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#8 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[1].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[1].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[1].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[1].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[1].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[1].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[1].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[1].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[1].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[1].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#9 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[2].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[2].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[2].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[2].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[2].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[2].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[2].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[2].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[2].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[2].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#10 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[3].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[3].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[3].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[3].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[3].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[3].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[3].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[3].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[3].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[3].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#11 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[4].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[4].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[4].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[4].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[4].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[4].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[4].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[4].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[4].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[4].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#12 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[5].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[5].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[5].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[5].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[5].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[5].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[5].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[5].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[5].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[5].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#13 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[6].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[6].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[6].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[6].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[6].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[6].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[6].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[6].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[6].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[6].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#14 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[7].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[7].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[7].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[7].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[7].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[7].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[7].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[7].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[7].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[7].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#15 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[8].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[8].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[8].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[8].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[8].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[8].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[8].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[8].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[8].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[8].CROs/mux2_out_inferred_i_1.
Related violations: <none>

LUTLP-1#16 Warning
Combinatorial Loop  
10 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. To allow bitstream creation for designs with combinatorial logic loops (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]. NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. CRO_PUF1/CRO_GEN[9].CROs/inverter_bot_0/b_INST_0, CRO_PUF1/CRO_GEN[9].CROs/inverter_bot_1/b_INST_0, CRO_PUF1/CRO_GEN[9].CROs/inverter_bot_2/b_INST_0, CRO_PUF1/CRO_GEN[9].CROs/inverter_top_0/b_INST_0, CRO_PUF1/CRO_GEN[9].CROs/inverter_top_1/b_INST_0, CRO_PUF1/CRO_GEN[9].CROs/inverter_top_2/b_INST_0, CRO_PUF1/CRO_GEN[9].CROs/enable_out_inferred_i_1, CRO_PUF1/CRO_GEN[9].CROs/mux0_out_inferred_i_1, CRO_PUF1/CRO_GEN[9].CROs/mux1_out_inferred_i_1, CRO_PUF1/CRO_GEN[9].CROs/mux2_out_inferred_i_1.
Related violations: <none>

PDRC-153#1 Warning
Gated clock check  
Net CRO_PUF1/O1 is a gated clock net sourced by a combinational pin CRO_PUF1/count_reg[0]_i_7/O, cell CRO_PUF1/count_reg[0]_i_7. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#2 Warning
Gated clock check  
Net CRO_PUF1/O2 is a gated clock net sourced by a combinational pin CRO_PUF1/count_reg[0]_i_7__0/O, cell CRO_PUF1/count_reg[0]_i_7__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>


